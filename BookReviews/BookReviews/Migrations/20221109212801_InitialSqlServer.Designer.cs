// <auto-generated />
using System;
using BookReviews;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookReviews.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
<<<<<<< HEAD:BookReviews/BookReviews/Migrations/20221110015604_MySqlInitial.Designer.cs
    [Migration("20221110015604_MySqlInitial")]
    partial class MySqlInitial
=======
    [Migration("20221109212801_InitialSqlServer")]
    partial class InitialSqlServer
>>>>>>> 00585bbc52995d7262b6d190da5c90bbb7419666:BookReviews/BookReviews/Migrations/20221109212801_InitialSqlServer.Designer.cs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.30")
<<<<<<< HEAD:BookReviews/BookReviews/Migrations/20221110015604_MySqlInitial.Designer.cs
                .HasAnnotation("Relational:MaxIdentifierLength", 64);
=======
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
>>>>>>> 00585bbc52995d7262b6d190da5c90bbb7419666:BookReviews/BookReviews/Migrations/20221109212801_InitialSqlServer.Designer.cs

            modelBuilder.Entity("BookReviews.Models.AppUser", b =>
                {
                    b.Property<int>("AppUserId")
                        .ValueGeneratedOnAdd()
<<<<<<< HEAD:BookReviews/BookReviews/Migrations/20221110015604_MySqlInitial.Designer.cs
                        .HasColumnType("int");

                    b.Property<DateTime>("SignUpDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");
=======
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("SignUpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");
>>>>>>> 00585bbc52995d7262b6d190da5c90bbb7419666:BookReviews/BookReviews/Migrations/20221109212801_InitialSqlServer.Designer.cs

                    b.HasKey("AppUserId");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("BookReviews.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
<<<<<<< HEAD:BookReviews/BookReviews/Migrations/20221110015604_MySqlInitial.Designer.cs
                        .HasColumnType("int");

                    b.Property<string>("AuthorName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("BookTitle")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");
=======
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookTitle")
                        .HasColumnType("nvarchar(max)");
>>>>>>> 00585bbc52995d7262b6d190da5c90bbb7419666:BookReviews/BookReviews/Migrations/20221109212801_InitialSqlServer.Designer.cs

                    b.Property<int>("Isbn")
                        .HasColumnType("int");

                    b.Property<DateTime>("PubDate")
<<<<<<< HEAD:BookReviews/BookReviews/Migrations/20221110015604_MySqlInitial.Designer.cs
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Publisher")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");
=======
                        .HasColumnType("datetime2");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");
>>>>>>> 00585bbc52995d7262b6d190da5c90bbb7419666:BookReviews/BookReviews/Migrations/20221109212801_InitialSqlServer.Designer.cs

                    b.HasKey("BookId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookReviews.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
<<<<<<< HEAD:BookReviews/BookReviews/Migrations/20221110015604_MySqlInitial.Designer.cs
                        .HasColumnType("int");
=======
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);
>>>>>>> 00585bbc52995d7262b6d190da5c90bbb7419666:BookReviews/BookReviews/Migrations/20221109212801_InitialSqlServer.Designer.cs

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
<<<<<<< HEAD:BookReviews/BookReviews/Migrations/20221110015604_MySqlInitial.Designer.cs
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ReviewText")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");
=======
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewText")
                        .HasColumnType("nvarchar(max)");
>>>>>>> 00585bbc52995d7262b6d190da5c90bbb7419666:BookReviews/BookReviews/Migrations/20221109212801_InitialSqlServer.Designer.cs

                    b.Property<int?>("ReviewerAppUserId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("BookId");

                    b.HasIndex("ReviewerAppUserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("BookReviews.Models.Review", b =>
                {
                    b.HasOne("BookReviews.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId");

                    b.HasOne("BookReviews.Models.AppUser", "Reviewer")
                        .WithMany()
                        .HasForeignKey("ReviewerAppUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
